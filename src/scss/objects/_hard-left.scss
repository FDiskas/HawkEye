.hard-left {
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative; //@todo: Mixin these rules? fullRelative()
}

.hard-left__left {
  top: 0;
  left: 0;
  bottom: 0;
  height: 100%;
  position: absolute;
  width: $hard-left-width;
  @include transition(left .25s ease-in-out);
}

.hard-left__content {
  width: 100%;
  height: 100%;
  padding-left: $hard-left-width;
  @include transition(padding-left .25s ease-in-out);
}

.hard-left--pull {
  > .hard-left__left    { left: -$hard-left-width; }
  > .hard-left__content { padding-left: 0; }
}

@mixin generate-hards($post-class-name: null) {
  .hard-left--#{$post-class-name} {
    > .hard-left__left    { width: map-get($hard-left-sizes, $post-class-name); }
    > .hard-left__content { padding-left: map-get($hard-left-sizes, $post-class-name)!important;  }

    &.hard-left--pull {
      > .hard-left__left    { left: -map-get($hard-left-sizes, $post-class-name); }
      > .hard-left__content { padding-left: 0; }
    }
  }
};

@each $hard-name, $hard-size in $hard-left-sizes {
  @include generate-hards($hard-name);
}